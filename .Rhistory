GET(url,
query = list(`$order` = "zipcode",
`$limit` = chunk_size,
`$offset` = as.integer((loop_index - 1) * chunk_size)
)
) %>%
content("text") %>%
fromJSON() %>%
as_tibble()
DO_NEXT = dim(all_inspections[[loop_index]])[1] == chunk_size
loop_index = loop_index + 1
}
all_inspections
}
url = "https://data.cityofnewyork.us/resource/9w7m-hzhe.json"
rest_inspection = get_all_inspections(url) %>%
bind_rows()
download.file("https://www1.nyc.gov/assets/doh/downloads/excel/episrv/2015_CHP_PUD.xlsx", mode="wb", destfile = "health.xlsx")
health <- read_excel("health.xlsx", sheet = "CHP_all_data") %>%
select(Name, Racewhite_Rate, Poverty, Unemployment,
Smoking, Exercise,
Obesity, Diabetes, Stroke_Hosp) %>%
clean_names()
zip_neighbor <- read_csv("neigh_zipcode.csv") %>%
mutate(zipcode = as.character(zipcode))
##restaurant data with neighbourhood
rest_neighborhood = left_join(rest_inspection, zip_neighbor, by = "zipcode") %>%
filter(!is.na(neighborhood))
health_only_neighborhood <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood))
##Plotting for outcome in different neighborhood
bar_obe <- health_only_neighborhood %>%
mutate(neighborhood = fct_reorder(neighborhood, obesity)) %>%
filter(obesity > 25) %>%
ggplot(aes(x = neighborhood,y = obesity, fill = neighborhood)) + geom_col() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
labs(title = "Neighborhood with 25 percent or more obesity rate")
bar_dia <- health_only_neighborhood %>%
mutate(neighborhood = fct_reorder(neighborhood, diabetes)) %>%
filter(diabetes > 10) %>%
ggplot(aes(x = neighborhood,y = diabetes, fill = neighborhood)) + geom_col() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
labs(title = "Neighborhood with 10 percent or more diabetes rate")
bar_stro <- health_only_neighborhood %>%
mutate(neighborhood = fct_reorder(neighborhood, stroke_hosp)) %>%
filter(stroke_hosp > 300) %>%
ggplot(aes(x = neighborhood,y = stroke_hosp, fill = neighborhood)) +
geom_col() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
labs(title = "Neighborhood with 300 or more stroke hospitalization in 100,000 adults")
ggplotly(bar_obe)
ggplotly(bar_dia)
ggplotly(bar_stro)
health_only_neighborhood
View(health_only_neighborhood)
##Plotting box plot for neighborhood outcomes
boxplot(health_only_neighborhood$obesity)
##Plotting box plot for neighborhood outcomes
boxplot(health_only_neighborhood$obesity, health_only_neighborhood$diabetes)
View(health_only_neighborhood)
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(obesity,diabetes,stroke_hosp)
##Plotting box plot for neighborhood outcomes
boxplot(health_only_neighborhood$obesity, health_only_neighborhood$diabetes)
View(health_outcome)
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(neighborhood,obesity,diabetes,stroke_hosp)
##Plotting box plot for neighborhood outcomes
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(neighborhood,obesity,diabetes,stroke_hosp) %>%
gather(key = outcomes, value = rate, obesity:stroke_hosp)
##Plotting box plot for neighborhood outcomes
##Plotting box plot for neighborhood outcomes
boxplot_outcome <- ggplot(aes(x = outcomes, y = rate)) + geom_boxplot()
health_outcome
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(neighborhood,obesity,diabetes,stroke_hosp) %>%
gather(key = outcomes, value = rate, obesity:stroke_hosp) %>%
mutate(outcomes =  as.factor(outcomes))
##Plotting box plot for neighborhood outcomes
boxplot_outcome <- ggplot(aes(x = outcomes, y = rate)) + geom_boxplot()
health_outcome %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot()
##Plotting box plot for neighborhood outcomes
boxplot_outcome <- health_outcome %>%
ggplot(aes(x = outcomes, y = rate, color = neighborhood)) + geom_boxplot()
##Plotting box plot for neighborhood outcomes
boxplot_outcome <- health_outcome %>%
ggplot(aes(x = outcomes, y = rate, color = neighborhood)) + geom_boxplot()
health_outcome %>%
ggplot(aes(x = outcomes, y = rate, color = neighborhood)) + geom_boxplot()
health_outcome %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot() +
geom_point(color = neighborhood)
health_outcome %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot() +
geom_point(color = neighborhood)
health_outcome %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot() +
geom_point()
##Plotting box plot for neighborhood outcomes
boxplot_outcome <- health_outcome %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot() +
geom_point(color = neighborhood)
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(neighborhood,obesity,diabetes,stroke_hosp) %>%
gather(key = outcomes, value = rate, obesity:stroke_hosp) %>%
mutate(outcomes =  as.factor(outcomes))
##Plotting box plot for neighborhood outcomes
boxplot_outcome <- health_outcome %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot() +
geom_point(aes(color = neighborhood))
health_outcome %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot() +
geom_point(aes(color = neighborhood))
health_outcome %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none")
ggplotly(boxplot_outcome)
ggplotly(boxplot_outcome) + layout(showlegend = FALSE)
ggplotly(boxplot_outcome+ layout(showlegend = FALSE))
ggplotly(boxplot_outcome)
layout(showlegend = FALSE)
x <- ggplotly(boxplot_outcome)
hide_legend(x)
library(gridExtra)
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(neighborhood,obesity,diabetes,stroke_hosp) %>%
gather(key = outcomes, value = rate, obesity:stroke_hosp)
##Plotting box plot for neighborhood outcomes
boxplot_outcome <- health_outcome %>%
filter(outcomes == c("obesity","diabetes")) %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none")
x <- ggplotly(boxplot_outcome)
hide_legend(x)
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(neighborhood,obesity,diabetes,stroke_hosp) %>%
gather(key = outcomes, value = rate, obesity:stroke_hosp)
##Plotting box plot for neighborhood outcomes
boxplot_outcome <- health_outcome %>%
rename(percentage = rate) %>%
filter(outcomes == c("obesity","diabetes")) %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none")
x <- ggplotly(boxplot_outcome)
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(neighborhood,obesity,diabetes,stroke_hosp) %>%
gather(key = outcomes, value = rate, obesity:stroke_hosp)
##Plotting box plot for neighborhood outcomes
boxplot_outcome <- health_outcome %>%
rename(percentage = rate) %>%
filter(outcomes == c("obesity","diabetes")) %>%
ggplot(aes(x = outcomes, y = percentage)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none")
x <- ggplotly(boxplot_outcome)
hide_legend(x)
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(neighborhood,obesity,diabetes,stroke_hosp) %>%
gather(key = outcomes, value = rate, obesity:stroke_hosp)
##Plotting box plot for neighborhood outcomes
boxplot_outcome <- health_outcome %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none")
x <- ggplotly(boxplot_outcome)
hide_legend(x)
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(neighborhood,obesity,diabetes,stroke_hosp) %>%
gather(key = outcomes, value = rate, obesity:stroke_hosp)
##Plotting box plot for neighborhood outcomes
boxplot_ob_dia <- health_outcome %>%
rename(percentage = rate) %>%
filter(outcomes == c("obesity","diabetes")) %>%
ggplot(aes(x = outcomes, y = percentage)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none")
x <- ggplotly(boxplot_ob_dia)
boxplot_stroke <- health_outcome %>%
filter(outcomes == "stroke_hosp" %>%
ggplot(aes(x = outcomes, y = percentage)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none")
y <- ggplotly(boxplot_stroke)
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(neighborhood,obesity,diabetes,stroke_hosp) %>%
gather(key = outcomes, value = rate, obesity:stroke_hosp)
##Plotting box plot for neighborhood outcomes
boxplot_ob_dia <- health_outcome %>%
rename(percentage = rate) %>%
filter(outcomes == c("obesity","diabetes")) %>%
ggplot(aes(x = outcomes, y = percentage)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none")
x <- ggplotly(boxplot_ob_dia)
boxplot_stroke <- health_outcome %>%
filter(outcomes == "stroke_hosp") %>%
ggplot(aes(x = outcomes, y = percentage)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none")
y <- ggplotly(boxplot_stroke)
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(neighborhood,obesity,diabetes,stroke_hosp) %>%
gather(key = outcomes, value = rate, obesity:stroke_hosp)
##Plotting box plot for neighborhood outcomes
boxplot_ob_dia <- health_outcome %>%
rename(percentage = rate) %>%
filter(outcomes == c("obesity","diabetes")) %>%
ggplot(aes(x = outcomes, y = percentage)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none")
x <- ggplotly(boxplot_ob_dia)
boxplot_stroke <- health_outcome %>%
filter(outcomes == "stroke_hosp") %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none")
y <- ggplotly(boxplot_stroke)
grid.arrange(hide_legend(x),hide_legend(y))
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(neighborhood,obesity,diabetes,stroke_hosp) %>%
gather(key = outcomes, value = rate, obesity:stroke_hosp)
##Plotting box plot for neighborhood outcomes
boxplot_ob_dia <- health_outcome %>%
rename(percentage = rate) %>%
filter(outcomes == c("obesity","diabetes")) %>%
ggplot(aes(x = outcomes, y = percentage)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none")
x <- ggplotly(boxplot_ob_dia)
boxplot_stroke <- health_outcome %>%
filter(outcomes == "stroke_hosp") %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none")
y <- ggplotly(boxplot_stroke)
subplot(hide_legend(x),hide_legend(y))
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(neighborhood,obesity,diabetes,stroke_hosp) %>%
gather(key = outcomes, value = rate, obesity:stroke_hosp)
##Plotting box plot for neighborhood outcomes
boxplot_ob_dia <- health_outcome %>%
rename(percentage = rate) %>%
filter(outcomes == c("obesity","diabetes")) %>%
ggplot(aes(x = outcomes, y = percentage)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none") +
labs(title = "Percentage of diabetes and obesity")
x <- ggplotly(boxplot_ob_dia)
boxplot_stroke <- health_outcome %>%
filter(outcomes == "stroke_hosp") %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none") +
labs(title = "Rate of hospitalizations per 100,000 adults")
y <- ggplotly(boxplot_stroke)
subplot(hide_legend(x),hide_legend(y))
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(neighborhood,obesity,diabetes,stroke_hosp) %>%
gather(key = outcomes, value = rate, obesity:stroke_hosp)
##Plotting box plot for neighborhood outcomes
boxplot_ob_dia <- health_outcome %>%
rename(percentage = rate) %>%
filter(outcomes == c("obesity","diabetes")) %>%
ggplot(aes(x = outcomes, y = percentage)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none") +
labs(title = "Percentage of diabetes and obesity")
x <- ggplotly(boxplot_ob_dia)
boxplot_stroke <- health_outcome %>%
filter(outcomes == "stroke_hosp") %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none") +
labs(title = "Obesity and diabetes percentage    rate of hospitalizations per 100,000 adults")
y <- ggplotly(boxplot_stroke)
subplot(hide_legend(x),hide_legend(y))
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(neighborhood,obesity,diabetes,stroke_hosp) %>%
gather(key = outcomes, value = rate, obesity:stroke_hosp)
##Plotting box plot for neighborhood outcomes
boxplot_ob_dia <- health_outcome %>%
rename(percentage = rate) %>%
filter(outcomes == c("obesity","diabetes")) %>%
ggplot(aes(x = outcomes, y = percentage)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none") +
labs(title = "Percentage of diabetes and obesity")
x <- ggplotly(boxplot_ob_dia)
boxplot_stroke <- health_outcome %>%
filter(outcomes == "stroke_hosp") %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none") +
labs(title = "Obesity and diabetes percentage
rate of hospitalizations per 100,000 adults")
y <- ggplotly(boxplot_stroke)
subplot(hide_legend(x),hide_legend(y))
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(neighborhood,obesity,diabetes,stroke_hosp) %>%
gather(key = outcomes, value = rate, obesity:stroke_hosp)
##Plotting box plot for neighborhood outcomes
boxplot_ob_dia <- health_outcome %>%
rename(percentage = rate) %>%
filter(outcomes == c("obesity","diabetes")) %>%
ggplot(aes(x = outcomes, y = percentage)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none") +
labs(title = "Percentage of diabetes and obesity")
x <- ggplotly(boxplot_ob_dia)
boxplot_stroke <- health_outcome %>%
filter(outcomes == "stroke_hosp") %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none") +
labs(title = "Obesity and diabetes percentage
Rate of hospitalizations per 100,000 adults")
y <- ggplotly(boxplot_stroke)
subplot(hide_legend(x),hide_legend(y))
library(tidyverse)
library(rvest)
library(httr)
library(readxl)
library(data.table)
library(stringr)
library(janitor)
library(stringr)
library(forcats)
library(jsonlite)
library(viridis)
library(plotly)
library(ggplot2)
library(knitr)
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(neighborhood,obesity,diabetes,stroke_hosp) %>%
gather(key = outcomes, value = rate, obesity:stroke_hosp)
##Plotting box plot for neighborhood outcomes
boxplot_ob_dia <- health_outcome %>%
rename(percentage = rate) %>%
filter(outcomes == c("obesity","diabetes")) %>%
ggplot(aes(x = outcomes, y = percentage)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none") +
labs(title = "Percentage of diabetes and obesity")
x <- ggplotly(boxplot_ob_dia)
boxplot_stroke <- health_outcome %>%
filter(outcomes == "stroke_hosp") %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none") +
labs(title = "Obesity and diabetes percentage
Rate of hospitalizations per 100,000 adults")
y <- ggplotly(boxplot_stroke)
subplot(hide_legend(x),hide_legend(y))
library(tidyverse)
library(rvest)
library(httr)
library(readxl)
library(data.table)
library(stringr)
library(janitor)
library(stringr)
library(forcats)
library(jsonlite)
library(viridis)
library(plotly)
library(ggplot2)
library(knitr)
get_all_inspections = function(url) {
all_inspections = vector("list", length = 0)
loop_index = 1
chunk_size = 50000
DO_NEXT = TRUE
while (DO_NEXT) {
message("Getting data, page ", loop_index)
all_inspections[[loop_index]] =
GET(url,
query = list(`$order` = "zipcode",
`$limit` = chunk_size,
`$offset` = as.integer((loop_index - 1) * chunk_size)
)
) %>%
content("text") %>%
fromJSON() %>%
as_tibble()
DO_NEXT = dim(all_inspections[[loop_index]])[1] == chunk_size
loop_index = loop_index + 1
}
all_inspections
}
url = "https://data.cityofnewyork.us/resource/9w7m-hzhe.json"
rest_inspection = get_all_inspections(url) %>%
bind_rows()
download.file("https://www1.nyc.gov/assets/doh/downloads/excel/episrv/2015_CHP_PUD.xlsx", mode="wb", destfile = "health.xlsx")
health <- read_excel("health.xlsx", sheet = "CHP_all_data") %>%
select(Name, Racewhite_Rate, Poverty, Unemployment,
Smoking, Exercise,
Obesity, Diabetes, Stroke_Hosp) %>%
clean_names()
zip_neighbor <- read_csv("neigh_zipcode.csv") %>%
mutate(zipcode = as.character(zipcode))
##restaurant data with neighbourhood
rest_neighborhood = left_join(rest_inspection, zip_neighbor, by = "zipcode") %>%
filter(!is.na(neighborhood))
health_outcome <- health[-c(1:6),] %>%
rename(neighborhood = name) %>%
mutate(neighborhood = as.factor(neighborhood)) %>%
select(neighborhood,obesity,diabetes,stroke_hosp) %>%
gather(key = outcomes, value = rate, obesity:stroke_hosp)
##Plotting box plot for neighborhood outcomes
boxplot_ob_dia <- health_outcome %>%
rename(percentage = rate) %>%
filter(outcomes == c("obesity","diabetes")) %>%
ggplot(aes(x = outcomes, y = percentage)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none") +
labs(title = "Percentage of diabetes and obesity")
x <- ggplotly(boxplot_ob_dia)
boxplot_stroke <- health_outcome %>%
filter(outcomes == "stroke_hosp") %>%
ggplot(aes(x = outcomes, y = rate)) + geom_boxplot() +
geom_point(aes(color = neighborhood)) + theme(legend.position = "none") +
labs(title = "Obesity and diabetes percentage
Rate of hospitalizations per 100,000 adults")
y <- ggplotly(boxplot_stroke)
subplot(hide_legend(x),hide_legend(y))
neighborhood_list =
rest_neighborhood %>%
distinct(neighborhood) %>%
arrange(neighborhood)
rest_fastfood_neighborhood =
rest_neighborhood %>%
filter(cuisine_description %in% c("Bagels/Pretzels",
"Bottled beverages, including water, sodas, juices, etc.",
"Chicken",
"Delicatessen",
"Donuts",
"Hamburgers",
"Hotdogs",
"Hotdogs/Pretzels",
"Ice Cream, Gelato, Yogurt, Ices",
"Nuts/Confectionary",
"Pancakes/Waffles",
"Pizza",
"Soul Food",
"Sandwiches",
"Sandwiches/Salads/Mixed Buffet",
"Soups & Sandwiches"))
percent_fastfood_neighborhood = function(name_neighborhood){
rest_each_neighborhood =
rest_neighborhood %>%
filter(neighborhood == name_neighborhood) %>%
distinct(camis)
n_rest_neighborhood = nrow(rest_each_neighborhood)
rest_fastfood_distinct_neighborhood =
rest_fastfood_neighborhood %>%
filter(neighborhood == name_neighborhood) %>%
distinct(camis, cuisine_description)
n_fastfood_neighborhood = nrow(rest_fastfood_distinct_neighborhood)
percent_fastfood_neighborhood = n_fastfood_neighborhood/n_rest_neighborhood
tibble(
neighborhood = name_neighborhood,
n_fastfood = n_fastfood_neighborhood,
n_rest = n_rest_neighborhood,
percent_fastfood = percent_fastfood_neighborhood
)
}
neighborhood_boro =
rest_neighborhood %>%
distinct(neighborhood, boro) %>%
arrange(neighborhood) %>%
mutate(neighborhood = str_to_upper(neighborhood)) %>%
filter(!(neighborhood == "LONG ISLAND CITY AND ASTORIA" & boro == "MANHATTAN"))
fastfood_neighborhood =
map(neighborhood_list$neighborhood, percent_fastfood_neighborhood) %>%
bind_rows() %>%
mutate(neighborhood = str_to_upper(neighborhood)) %>%
left_join(., neighborhood_boro, by = "neighborhood")
# plot for each neighborhood
fastfood_neighborhood %>%
mutate(neighborhood = as.factor(neighborhood),
n_rest = as.numeric(n_rest),
n_nonfastfood = n_rest - n_fastfood,
neighborhood = fct_reorder(neighborhood, percent_fastfood),
text_label = str_c("Neighborhood: ", neighborhood, '\nPercentage: ', format(percent_fastfood * 100, digits = 3), "%")) %>%
plot_ly(., x = ~neighborhood, y = ~n_fastfood, type = 'bar', name = 'fastfood restaurants', text = ~text_label) %>%
add_trace(y = ~n_nonfastfood, name = 'non-fastfood restaurants') %>%
layout(title = "Neighborhoods ordered by percentage of fastfood restaurants",
yaxis = list(title = 'Number of restaurants'),
xaxis = list(title = 'NYC Neighborhood',
showticklabels = FALSE),
barmode = 'stack')
