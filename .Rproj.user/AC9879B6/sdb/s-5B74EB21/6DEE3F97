{
    "collab_server" : "",
    "contents" : "\n################################################################\n#                   Biostatistical Methods I                   #\n#           Lecture 18: Multiple Linear Regression             #\n#               Model Building/Variable Selection              #\n#                   Last updated: 11.27.2017                   #\n################################################################\n\n\n\nrm(list = ls())\n\ninstall.packages('dplyr')\ninstall.packages('HH')                 # For VIF function\ninstall.packages(\"leaps\")              # Stepwise and test-based criteria\n\nlibrary(dplyr)\nlibrary(HH)\nlibrary(leaps)\n\n\n# Read data Surgical.csv\n\nsetwd(\"O:\\\\Teaching\\\\Methods1\\\\P8130\\\\Lectures\\\\Lecture17\")\ndata_surg<-read.csv(\"Surgical.csv\")\nnames(data_surg)\n\n# Attach function lets you access the variables directly\nattach(data_surg)\n\n\n# Explorations: scatter plot matrix and pairwise correlation\npairs(data_surg)\n\n# Helps identify collinearity \ncor(data_surg)\n\n# Boxplots for each variable\n# par(mar=c(3,3,1,1)) # if margins are too large\npar(mfrow=c(2,3))\nboxplot(Lnsurvival, main='Lnsurvival')\nboxplot(Age, main='Age')\nboxplot(Bloodclot,main='Bloodclot' )\nboxplot(Progindex, main='Progindex')\nboxplot(Enzyme, main='Enzyme')\nboxplot(Liver, main='Liver')\n\n# Make a data frame with ln(Survival) as the only outcome\nsurg<-data.frame(data_surg[,-9])\n\n# Fit a regression using all predictors\nmult.fit <- lm(Lnsurvival ~ Bloodclot + Progindex + Enzyme + Liver + Age + Gender + Alcmod + Alcheav, data=surg)\nsummary (mult.fit)\n\n# Same thing\nmult.fit <- lm(Lnsurvival ~ ., data=surg)\nsummary(mult.fit)\n\n#############################################################################\n# Backward elimination: take out non-significant variables 'one at a time'  #\n# starting with the highest p-value                                         #\n#############################################################################\n\n# No Liver\nstep1<-update(mult.fit, . ~ . -Liver)\nsummary(step1)\n\n# No Alcmod\nstep2<-update(step1, . ~ . -Alcmod)\nsummary(step2)\n\n# No Age\nstep3<-update(step2, . ~ . -Age)\nsummary(step3)\n\n# No Gender\nstep4<-update(step3, . ~ . -Gender)\nsummary(step4)\n\n# What are the effects on R2 and adj-R2?\n\n\n#############################################################################\n# Forward elimination: Reverse of backward elimination                      #\n# Similar steps for forward elimination, starting with the lowest p-value   #                                                            #\n#############################################################################\n\nlibrary(faraway)\nlibrary(broom)\n\n### Step 1:  Fit simple linear regressions for all variables,look for the variable with lowest p-value\nfit1 <- lm(Lnsurvival ~ Bloodclot, data=surg)\ntidy(fit1)\nfit2 <- lm(Lnsurvival ~ Progindex, data=surg)\ntidy(fit2)\nfit3 <- lm(Lnsurvival ~ Enzyme, data=surg)\ntidy(fit3)\nfit4 <- lm(Lnsurvival ~ Liver, data=surg)\ntidy(fit4)\nfit5 <- lm(Lnsurvival ~ Age, data=surg)\ntidy(fit5)\nfit6 <- lm(Lnsurvival ~ Gender, data=surg)\ntidy(fit6)\nfit7 <- lm(Lnsurvival ~ Alcmod, data=surg)\ntidy(fit7)\nfit8 <- lm(Lnsurvival ~ Alcheav, data=surg)\ntidy(fit8)\n\n# Enter first the one with the lowest p-value: Enzyme\nforward1<-lm(Lnsurvival~Enzyme, data=surg)\ntidy(forward1)\n\n### Step 2: Enter the one with the lowest p-value in the rest \nfit1 <- update(forward1, . ~ . +Bloodclot)\ntidy(fit1)\nfit2 <- update(forward1, . ~ . +Progindex)\ntidy(fit2)\nfit3 <- update(forward1, . ~ . +Liver)\ntidy(fit3)\nfit4 <- update(forward1, . ~ . +Age)\ntidy(fit4)\nfit5 <- update(forward1, . ~ . +Gender)\ntidy(fit5)\nfit6 <- update(forward1, . ~ . +Alcmod)\ntidy(fit6)\nfit7 <- update(forward1, . ~ . +Alcheav)\ntidy(fit7)\n\n# Enter the one with the lowest p-value: Progindex\nforward2 <- update(forward1, . ~ . + Progindex)\ntidy(forward2)\n\n### Step 3: Enter the one with the lowest p-value in the rest \nfit1 <- update(forward2, . ~ . +Bloodclot)\ntidy(fit1)\nfit2 <- update(forward2, . ~ . +Liver)\ntidy(fit2)\nfit3 <- update(forward2, . ~ . +Age)\ntidy(fit3)\nfit4 <- update(forward2, . ~ . +Gender)\ntidy(fit4)\nfit5 <- update(forward2, . ~ . +Alcmod)\ntidy(fit5)\nfit6 <- update(forward2, . ~ . +Alcheav)\ntidy(fit6)\n# Enter the one with the lowest p-value: Alcheav\nforward3 <- update(forward2, . ~ . + Alcheav)\ntidy(forward3)\n\n### Step 4: Enter the one with the lowest p-value in the rest \nfit1 <- update(forward3, . ~ . +Bloodclot)\ntidy(fit1)\nfit2 <- update(forward3, . ~ . +Liver)\ntidy(fit2)\nfit3 <- update(forward3, . ~ . +Age)\ntidy(fit3)\nfit4 <- update(forward3, . ~ . +Gender)\ntidy(fit4)\nfit5 <- update(forward3, . ~ . +Alcmod)\ntidy(fit5)\n# Enter the one with the lowest p-value: Bloodclot\nforward4 <- update(forward3, . ~ . + Bloodclot)\ntidy(forward4)\n\n\n### Step 5: Enter the one with the lowest p-value in the rest \nfit1 <- update(forward4, . ~ . +Liver)\ntidy(fit1)\nfit2 <- update(forward4, . ~ . +Age)\ntidy(fit2)\nfit3 <- update(forward4, . ~ . +Gender)\ntidy(fit3)\nfit4 <- update(forward4, . ~ . +Alcmod)\ntidy(fit4)\n# P-value of all new added variables are larger than 0.05, which means that they \n# are not significant predictor, and we stop here.\n\n# The model we obtained is Lnsurvival ~ Enzyme +Progindex + Alcheav+Bloodclot\nmult.fit <- lm(Lnsurvival ~ Enzyme + Progindex + Alcheav + Bloodclot)\nsummary(mult.fit)\nAIC(mult.fit)\n\n\n############################################################################\n#  Stepwise regreession                                                    #   \n# 'Step' function uses AIC criterion for var selection and the default     #\n#  option is 'backward'.                                                   #\n#  Step is a simplified version of stepAIC()                               #\n############################################################################\n\nmult.fit <- lm(Lnsurvival ~ ., data=surg)\nstep(mult.fit, direction='backward')\n\n\n############################################################################\n#                         Test-based procedures                           #\n############################################################################\n\n# Leaps function provides all-subsets analysis\n\n# Printing the 2 best models of each size, using the Cp criterion:\nleaps(x = surg[,1:8], y = surg[,9], nbest=2, method=\"Cp\")\n\n\n# Printing the 2 best models of each size, using the adjusted R^2 criterion:\nleaps(x = surg[,1:8], y = surg[,9], nbest=2, method=\"adjr2\")\n\n# Summary of models for each size (one model per size)\nb<-regsubsets(Lnsurvival ~ ., data=surg)\n   (rs<-summary(b))\n\n# Plots of Cp and Adj-R2 as functions of parameters\n\npar(mar=c(4,4,1,1))\npar(mfrow=c(1,2))\n\nplot(2:9, rs$cp, xlab=\"No of parameters\", ylab=\"Cp Statistic\")\nabline(0,1)\n\nplot(2:9, rs$adjr2, xlab=\"No of parameters\", ylab=\"Adj R2\")\n\n\n# Calculating the AIC of any particular model\n# AIC of the 6-predictor model:\n\nfin.mod <- lm(Lnsurvival ~ Age + Gender + Bloodclot + Alcheav + Progindex + Enzyme, data=data_surg)\nAIC(fin.mod)\n\n# BIC\nAIC(fin.mod, k = log(length(Lnsurvival)))\n\n#############################################################################\n#   A more compact way to look at the test-based results                    #\n#############################################################################\n\nbest <- function(model, ...) \n{\n  subsets <- regsubsets(formula(model), model.frame(model), ...)\n  subsets <- with(summary(subsets),\n                  cbind(p = as.numeric(rownames(which)), which, rss, rsq, adjr2, cp, bic))\n  \n  return(subsets)\n}  \n\n# Select the 'best' 2 models of all subsets\nround(best(mult.fit, nbest = 2), 4)\n\n# Select the 'best' 1 model of all subsets\nround(best(mult.fit, nbest = 1), 4)\n\n\n# Checking the model assumptions for the model: Lnsurvival ~ Enzyme + Progindex + Alcheav + Bloodclot\nmult.fit <- lm(Lnsurvival ~ Enzyme + Progindex + Alcheav + Bloodclot, data=surg)\npar(mfrow=c(2,2))\nplot(mult.fit)\n\n\n",
    "created" : 1512685644940.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1752732702",
    "id" : "6DEE3F97",
    "lastKnownWriteTime" : 1512105016,
    "last_content_update" : 1512105016,
    "path" : "~/Desktop/Columbia/semester 1/Biostatistics Method I(P8130)/P8130.Lecture18/Lect18_ModSelect.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}